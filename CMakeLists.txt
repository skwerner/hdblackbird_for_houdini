cmake_minimum_required(VERSION 3.18)
project(HdCyclesForHoudini NONE)

include(ExternalProject)

list(APPEND CONFIGURE_FLAGS -DCMAKE_CXX_COMPILER=${CMAKE_CXX_COMPILER})
list(APPEND CONFIGURE_FLAGS -DCMAKE_C_COMPILER=${CMAKE_C_COMPILER})
list(APPEND CONFIGURE_FLAGS -DCMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE})
list(APPEND CONFIGURE_FLAGS -DCMAKE_INSTALL_RPATH_USE_LINK_PATH=ON)
list(APPEND CONFIGURE_FLAGS -DCMAKE_POSITION_INDEPENDENT_CODE=ON)
list(APPEND CONFIGURE_FLAGS -DCMAKE_CXX_STANDARD=14)
list(APPEND CONFIGURE_FLAGS -DCMAKE_INSTALL_PREFIX=${CMAKE_INSTALL_PREFIX})
list(APPEND CONFIGURE_FLAGS -DCMAKE_CXX_FLAGS="-D_GLIBCXX_USE_CXX11_ABI=0")
list(APPEND CONFIGURE_FLAGS -DCMAKE_PREFIX_PATH=${CMAKE_INSTALL_PREFIX}/lib/cmake)
list(APPEND CONFIGURE_FLAGS -DCMAKE_EXPORT_COMPILE_COMMANDS=ON)

# gflags

list(APPEND GFLAGS_CONFIGURE_FLAGS ${CONFIGURE_FLAGS})

ExternalProject_Add(gflags
    GIT_REPOSITORY https://github.com/gflags/gflags.git
    GIT_SHALLOW TRUE
    CONFIGURE_COMMAND ${CMAKE_COMMAND} <SOURCE_DIR> ${GFLAGS_CONFIGURE_FLAGS}
    BUILD_COMMAND ${CMAKE_COMMAND} -E echo ""
    INSTALL_COMMAND ${CMAKE_COMMAND} --build . -j --target install
    )

# glog

list(APPEND GLOG_CONFIGURE_FLAGS ${CONFIGURE_FLAGS})
list(APPEND GLOG_CONFIGURE_FLAGS -DWITH_GTEST=OFF)
list(APPEND GLOG_CONFIGURE_FLAGS -DBUILD_TESTING=OFF)

ExternalProject_Add(glog
    GIT_REPOSITORY https://github.com/google/glog.git
    GIT_SHALLOW TRUE
    CONFIGURE_COMMAND ${CMAKE_COMMAND} <SOURCE_DIR> ${GLOG_CONFIGURE_FLAGS}
    BUILD_COMMAND ${CMAKE_COMMAND} -E echo ""
    INSTALL_COMMAND ${CMAKE_COMMAND} --build . -j --target install
    DEPENDS gflags
    )


# cycles

list(APPEND CYCLES_CONFIGURE_FLAGS ${CONFIGURE_FLAGS})
list(APPEND CYCLES_CONFIGURE_FLAGS -DBUILD_WITH_REZ=OFF)
list(APPEND CYCLES_CONFIGURE_FLAGS -DWITH_CYCLES_OSL=OFF)
list(APPEND CYCLES_CONFIGURE_FLAGS -DWITH_NETWORK=OFF)
list(APPEND CYCLES_CONFIGURE_FLAGS -DWITH_CYCLES_OPENIMAGEDENOISE=OFF)
list(APPEND CYCLES_CONFIGURE_FLAGS -DWITH_CYCLES_STANDALONE_GUI=OFF)
list(APPEND CYCLES_CONFIGURE_FLAGS -DWITH_CYCLES_LOGGING=ON)
list(APPEND CYCLES_CONFIGURE_FLAGS -DHOUDINI_ROOT:FILEPATH=/opt/hfs18.5)

# inject houdini to cycles
list(APPEND CYCLES_CONFIGURE_FLAGS -DCMAKE_PROJECT_INCLUDE:FILEPATH=${CMAKE_SOURCE_DIR}/inject_cycles.cmake)

message(STATUS "cycles cmake flags:" ${CYCLES_CONFIGURE_FLAGS})

ExternalProject_Add(coreBlackbird
    GIT_REPOSITORY https://github.com/tangent-opensource/coreBlackbird.git
    GIT_TAG master
    GIT_SHALLOW TRUE
   # PATCH_COMMAND patch <SOURCE_DIR>/src/kernel/kernel_types.h < ${CMAKE_SOURCE_DIR}/rtc_namespace.patch
   # COMMAND patch <SOURCE_DIR>/third_party/cuew/CMakeLists.txt < ${CMAKE_SOURCE_DIR}/extern_cuew.patch
    CONFIGURE_COMMAND ${CMAKE_COMMAND} <SOURCE_DIR> ${CYCLES_CONFIGURE_FLAGS}
    BUILD_COMMAND ${CMAKE_COMMAND} -E echo ""
    INSTALL_COMMAND ${CMAKE_COMMAND} --build . -j --target install
    DEPENDS glog
    )


# hd cycles

list(APPEND HD_CYCLES_CONFIGURE_FLAGS ${CONFIGURE_FLAGS})
list(APPEND HD_CYCLES_CONFIGURE_FLAGS -DUSE_HOUDINI_USD=TRUE -DHOUDINI_ROOT=/opt/hfs18.5)

ExternalProject_Add(hdBlackbird
    GIT_REPOSITORY https://github.com/tangent-opensource/hdBlackbird.git
    GIT_TAG main
    GIT_SHALLOW TRUE
    CONFIGURE_COMMAND ${CMAKE_COMMAND} <SOURCE_DIR> ${HD_CYCLES_CONFIGURE_FLAGS}
    BUILD_COMMAND ${CMAKE_COMMAND} -E echo ""
    INSTALL_COMMAND ${CMAKE_COMMAND} --build . -j --target install
    DEPENDS coreBlackbird
    )
